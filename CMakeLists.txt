cmake_minimum_required(VERSION 3.21)
project(base64 C)
set(CMAKE_C_STANDARD 99)
add_compile_options(-Wall -Wextra -pedantic)

if (BASE64_USE_OPENSSL)
    set(BASE64_USE_OPENSSL ON)
    if(NOT OPENSSL_ROOT_DIR AND NOT OPENSSL_LIBRARIES)
        message(FATAL_ERROR "OPENSSL_INCLUDE_DIR and OPENSSL_LIBRARIES will be used!")
    elseif(NOT OPENSSL_ROOT_DIR)
        message(FATAL_ERROR "OPENSSL_INCLUDE_DIR will be used!")
    elseif(NOT OPENSSL_LIBRARIES)
        message(FATAL_ERROR "OPENSSL_LIBRARIES will be used!")
    else()
        include_directories(${OPENSSL_ROOT_DIR}/include)
        link_directories(${OPENSSL_LIBRARIES})
    endif()
endif(BASE64_USE_OPENSSL)

include_directories(${PROJECT_SOURCE_DIR}/src)

SET(SRC ${PROJECT_SOURCE_DIR}/src/base64.c)
ADD_LIBRARY(base64 SHARED ${SRC})
ADD_LIBRARY(base64_static STATIC ${SRC})
SET_TARGET_PROPERTIES(base64_static PROPERTIES OUTPUT_NAME "base64")
if (BASE64_USE_OPENSSL)
    target_link_libraries(base64 -lcrypto)
endif(BASE64_USE_OPENSSL)

add_executable(base64Test ${SRC}
        ${PROJECT_SOURCE_DIR}/test/test_base64.c)
if(BASE64_USE_OPENSSL)
    target_link_libraries(base64Test -lcrypto)
endif(BASE64_USE_OPENSSL)
